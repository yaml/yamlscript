!YS-v0

defn mdys-fmt-fns(o):
  str "\n":
    fmt-fns: o

defn fmt-fns(body):
  reduce-kv _ '' body:
    fn(md fn-sig desc):
      sig =: fn-sig.replace(/\) / ') → ')
      desc =:
        desc.has?(\\|).if("$desc\n" desc)
        .replace(/\b(C[CDS])\/(\S+)/ clojure-docs-link)
      md +: |
        * `$sig` — $(desc.replace(/\| / "\n\n    "))

defn clojure-docs-link([_ type name]):
  func =: name.replace(/\?$/ '_q')
  cond:
    type == 'CC':
      "[`clojure.core/$name`](https://clojuredocs.org/clojure.core/$func)"
    type == 'CD':
      "[`clojure.data/$name`](https://clojuredocs.org/clojure.data/$func)"
    type == 'CS':
      "[`clojure.string/$name`](https://clojuredocs.org/clojure.string/$func)"

defn mdys-quick-ref(o):
  links =:
    join ', ':
      for name words(o):
        "[$name](https://clojuredocs.org/clojure.core/$name)"

  =>: |+
    Clojure Core:

    * $links

# vim: ft=yaml sw=2 lisp:
