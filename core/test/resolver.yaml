# Copyright 2023-2024 Ingy dot Net
# This code is licensed under MIT license (See License for details)

- name: YAML 1.2 core schema
  yamlscript: |
    - plain scalar
    - "double quoted"
    - 'single quoted'
    - |
      literal
      block scalar
    - >
      folded
      block scalar
    - [41, -42, +43, +0, -0, 0o1337, 0xcafebabe]
    - [.1, -.2, +.3, 4.00, -5.99]
    - [.1e-00, -.2e+3, +.3e11, 4.00E-4, -5.99E99]
    - [true, True, TRUE]
    - [false, False, FALSE]
    - [null, Null, NULL, ~]
    -     # Empty scalar is null
    - key: value
    - {key: value}
    - ? key
      : value
  resolve: |
    {:seq
     [{:str "plain scalar"}
      {:str "double quoted"}
      {:str "single quoted"}
      {:str "literal\nblock scalar\n"}
      {:str "folded block scalar\n"}
      {:seq
       [{:int "41"}
        {:int "-42"}
        {:int "+43"}
        {:int "+0"}
        {:int "-0"}
        {:int "0o1337"}
        {:int "0xcafebabe"}]}
      {:seq
       [{:flt ".1"}
        {:flt "-.2"}
        {:flt "+.3"}
        {:flt "4.00"}
        {:flt "-5.99"}]}
      {:seq
       [{:flt ".1e-00"}
        {:flt "-.2e+3"}
        {:flt "+.3e11"}
        {:flt "4.00E-4"}
        {:flt "-5.99E99"}]}
      {:seq [{:bln "true"} {:bln "True"} {:bln "TRUE"}]}
      {:seq [{:bln "false"} {:bln "False"} {:bln "FALSE"}]}
      {:seq
       [{:nil "null"}
        {:nil "Null"}
        {:nil "NULL"}
        {:nil "~"}]}
      {:nil ""}
      {:map [{:str "key"} {:str "value"}]}
      {:map [{:str "key"} {:str "value"}]}
      {:map [{:str "key"} {:str "value"}]}]}


- name: Start in code mode
  yamlscript: |
    !yamlscript/v0
    prn: 'Hello'
    die: "Noooo"
  resolve: |
    {:xmap [{:expr "prn"} {:str "Hello"} {:expr "die"} {:xstr "Noooo"}]}


- name: Start in code mode with /code tag
  yamlscript: |
    !yamlscript/v0/code
    prn: 'Hello'
    die: "Noooo"
  resolve: |
    {:xmap [{:expr "prn"} {:str "Hello"} {:expr "die"} {:xstr "Noooo"}]}


- name: Start in bare mode
  yamlscript: |
    !yamlscript/v0/bare
    prn: 'Hello'
    die: "Noooo"
  resolve: |
    {:map [{:str "prn"} {:str "Hello"} {:str "die"} {:str "Noooo"}]}


- name: Start in data mode with !data tag
  yamlscript: |
    !yamlscript/v0/data
    prn: 'Hello'
    die: "Noooo"
  resolve: |
    {:map [{:str "prn"} {:str "Hello"} {:str "die"} {:str "Noooo"}]}


- name: Start in bare mode
  yamlscript: |
    prn: 'Hello'
    die: "Noooo"
  resolve: |
    {:map [{:str "prn"} {:str "Hello"} {:str "die"} {:str "Noooo"}]}


- name: Start in bare mode explicitly
  yamlscript: |
    !yamlscript/v0/bare
    prn: 'Hello'
    die: "Noooo"
  resolve: |
    {:map [{:str "prn"} {:str "Hello"} {:str "die"} {:str "Noooo"}]}


- name: Start in bare mode with !!map tag
  yamlscript: |
    !!map
    prn: 'Hello'
    die: "Noooo"
  resolve: |
    {:map [{:str "prn"} {:str "Hello"} {:str "die"} {:str "Noooo"}]}


- name: Can't use ! tag in bare mode
  error: true
  yamlscript: |
    prn: ! inc(41)
  resolve: |
    "Invalid tag for bare mode scalar: !\n"


- name: Tag ! switches from data mode to code mode
  yamlscript: |
    !yamlscript/v0/data
    num: ! inc(41)
  resolve: |
    {:map [{:str "num"} {:expr "inc(41)"}]}


- name: Tag ! switches from code mode to data mode
  yamlscript: |
    !yamlscript/v0
    num: ! inc(41)
  resolve: |
    {:xmap [{:expr "num"} {:str "inc(41)"}]}


- name: Tag ! switches from data mode to code mode
  yamlscript: |
    !yamlscript/v0/data
    num: ! inc(41)
  resolve: |
    {:map [{:str "num"} {:expr "inc(41)"}]}


- name: Sequence in data mode after switch
  yamlscript: |
    !yamlscript/v0
    list =: !
    - 1
    - 2
    - 3
  resolve: |
    {:xmap
     [{:def "list ="}
      {:seq [{:int "1"} {:int "2"} {:int "3"}]}]}


- name: Key syntax to switch to data mode
  yamlscript: |
    !yamlscript/v0
    list =::
    - 1
    - 2
    - 3
  resolve: |
    {:xmap
     [{:def "list ="}
      {:seq [{:int "1"} {:int "2"} {:int "3"}]}]}
